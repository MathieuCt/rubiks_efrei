.TH "moves_rubiks.h" 3 "Thu May 13 2021" "Rubik's Cube EFREI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
moves_rubiks.h
.SH SYNOPSIS
.br
.PP
\fC#include 'rubiks\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBmove_side_clockwise\fP (\fBrubiks_side\fP *rubiks, int side)"
.br
.ti -1c
.RI "void \fBmove_side_anticlockwise\fP (\fBrubiks_side\fP *rubiks, int side)"
.br
.ti -1c
.RI "void \fBmove_coin\fP (\fBrubiks_side\fP *rubiks, int side, int from, int to)"
.br
.ti -1c
.RI "void \fBmove_edge\fP (\fBrubiks_side\fP *rubiks, int side, int from, int to)"
.br
.ti -1c
.RI "void \fBmix_rubiks\fP (\fBrubiks_side\fP *)"
.br
.ti -1c
.RI "void \fBalternate_color\fP (\fBrubiks_side\fP *)"
.br
.ti -1c
.RI "void \fBsolve_rubiks\fP (\fBrubiks_side\fP *)"
.br
.ti -1c
.RI "void \fBsolve_white_side\fP (\fBrubiks_side\fP *rubiks)"
.br
.ti -1c
.RI "\fBcubies\fP \fBsearch_cubie\fP (\fBrubiks_side\fP *rubiks, \fBT_COLOR\fP cubie_color, \fBT_COLOR\fP neighbour1, \fBT_COLOR\fP neighbour2, \fBT_CUBIE_TYPE\fP cubie_type)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void alternate_color (\fBrubiks_side\fP * rubiks)"
Cette fonction permet de créer un damier de couleurs 
.PP
\fBParameters\fP
.RS 4
\fIrubiks\fP : un pointeur vers une structure \fBrubiks_side\fP 
.RE
.PP

.PP
Definition at line 149 of file moves_rubiks\&.c\&.
.SS "void mix_rubiks (\fBrubiks_side\fP * rubiks)"
Cette fonction permet de mélanger le cube de manière aléatoire\&. Elle choisit entre 20 et 30 mouvements à réaliser tout en choisissant une face à déplacer, au hasard\&. 
.PP
\fBParameters\fP
.RS 4
\fIrubiks\fP : un pointeur vers une structure \fBrubiks_side\fP 
.RE
.PP

.PP
Definition at line 133 of file moves_rubiks\&.c\&.
.SS "void move_coin (\fBrubiks_side\fP * rubiks, int side, int from, int to)"
Cette fonction permet de déplacer un coin du cube, depuis 'from' vers 'to' 
.PP
\fBParameters\fP
.RS 4
\fIrubiks\fP : Un pointeur vers une structure \fBrubiks_side\fP 
.br
\fIside\fP : La face du rubiks à traiter 
.br
\fIfrom\fP : Déplacer depuis ce cubie 
.br
\fIto\fP : Déplacer vers ce cubie 
.RE
.PP

.PP
Definition at line 19 of file moves_rubiks\&.c\&.
.SS "void move_edge (\fBrubiks_side\fP * rubiks, int side, int from, int to)"
Cette fonction permet de déplacer une arête depuis 'from' vers 'to' 
.PP
\fBParameters\fP
.RS 4
\fIrubiks\fP : Un pointeur vers une structure \fBrubiks_side\fP 
.br
\fIside\fP : La face du rubiks à traiter 
.br
\fIfrom\fP : Déplacer depuis ce cubie 
.br
\fIto\fP : Déplacer vers ce cubie 
.RE
.PP

.PP
Definition at line 37 of file moves_rubiks\&.c\&.
.SS "void move_side_anticlockwise (\fBrubiks_side\fP * rubiks, int side)"
Cette fonction fait tourner la face side dans le sens anti-horaire\&. En réalité, cela revient à tourner trois fois dans le sens horaire 
.PP
\fBParameters\fP
.RS 4
\fIrubiks\fP : Un pointeur vers une structure \fBrubiks_side\fP 
.br
\fIside\fP : La face à faire tourner dans le sens horaire 
.RE
.PP

.PP
Definition at line 120 of file moves_rubiks\&.c\&.
.SS "void move_side_clockwise (\fBrubiks_side\fP * rubiks, int side)"
cette fonction permet de faire tourner la face side du cube dans le sens horaire 
.PP
\fBParameters\fP
.RS 4
\fIrubiks\fP : Un pointeur vers une structure \fBrubiks_side\fP 
.br
\fIside\fP : La face à faire tourner dans le sens horaire 
.RE
.PP

.PP
Definition at line 48 of file moves_rubiks\&.c\&.
.SS "\fBcubies\fP search_cubie (\fBrubiks_side\fP * rubiks, \fBT_COLOR\fP cubie_color, \fBT_COLOR\fP neighbour1, \fBT_COLOR\fP neighbour2, \fBT_CUBIE_TYPE\fP cubie_type)"
Cette fonction permet de trouver un cubie en fonction de sa couleur et celle de ses voisins 
.PP
\fBParameters\fP
.RS 4
\fIrubiks\fP : Un pointeur vers une structure \fBrubiks_side\fP 
.br
\fIcubie_color\fP : todo 
.br
\fIneighbour1\fP : todo 
.br
\fIneighbour2\fP : todo 
.br
\fIcubie_type\fP : todo 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 282 of file moves_rubiks\&.c\&.
.SS "void solve_rubiks (\fBrubiks_side\fP * rubiks)"
Cette fonction permet de résoudre le cube\&. 
.PP
\fBParameters\fP
.RS 4
\fIrubiks\fP : Un pointeur vers une structure \fBrubiks_side\fP 
.RE
.PP

.PP
Definition at line 168 of file moves_rubiks\&.c\&.
.SS "void solve_white_side (\fBrubiks_side\fP * rubiks)"
Cette fonction cherche à résoudre la face blanche du Rubik's Cube 
.PP
\fBParameters\fP
.RS 4
\fIrubiks\fP : Un pointeur vers une structure \fBrubiks_side\fP 
.RE
.PP

.PP
Definition at line 177 of file moves_rubiks\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Rubik's Cube EFREI from the source code\&.
